{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikit\\\\Downloads\\\\33-ts-react-sw-routing-dom\\\\src\\\\components\\\\Contact.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport \"../css/contact.css\";\nimport { base_url, navItems, period_month, StarWarsContext } from \"../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  const [planets, setPlanets] = useState(['wait...']);\n  const {\n    setNav\n  } = useContext(StarWarsContext);\n  async function fillPlanets(url) {\n    const response = await fetch(url);\n    const json = await response.json();\n    const planets = json.map(item => item.name);\n    setPlanets(planets);\n    const info = {\n      payload: planets,\n      time: Date.now()\n    };\n    localStorage.setItem('planets', JSON.stringify(info));\n  }\n  useEffect(() => {\n    setNav(navItems[0].route);\n    const planets = JSON.parse(localStorage.getItem('planets'));\n    if (planets && Date.now() - planets.time < period_month) {\n      setPlanets(planets.payload);\n    } else {\n      fillPlanets(`${base_url}/v1/planets`);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"First Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstname\",\n          placeholder: \"Your name..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Planet\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"planet\",\n          children: planets.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item,\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 54\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Subject\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"subject\",\n          placeholder: \"Write something..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Contact, \"RBk3KMevpBkGajnXdQVG3f/X+K4=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useContext","useEffect","useState","base_url","navItems","period_month","StarWarsContext","jsxDEV","_jsxDEV","Contact","_s","planets","setPlanets","setNav","fillPlanets","url","response","fetch","json","map","item","name","info","payload","time","Date","now","localStorage","setItem","JSON","stringify","route","parse","getItem","children","onSubmit","e","preventDefault","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","index","value","_c","$RefreshReg$"],"sources":["C:/Users/nikit/Downloads/33-ts-react-sw-routing-dom/src/components/Contact.tsx"],"sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport \"../css/contact.css\";\nimport {base_url, defaultHero, friends, navItems, period_month, StarWarsContext} from \"../utils/constants\";\nimport {useNavigate, useParams} from \"react-router-dom\";\n\ninterface Planet {\n    name: string\n}\n\nconst Contact = () => {\n\n    const [planets, setPlanets] = useState(['wait...']);\n    const {setNav} = useContext(StarWarsContext);\n\n    async function fillPlanets(url: string) {\n        const response = await fetch(url);\n        const json: Planet[] = await response.json();\n        const planets = json.map(item => item.name);\n        setPlanets(planets)\n        const info = {\n            payload: planets,\n            time: Date.now()\n        }\n        localStorage.setItem('planets', JSON.stringify(info));\n    }\n\n    useEffect(() => {\n        setNav(navItems[0].route)\n        const planets = JSON.parse(localStorage.getItem('planets')!);\n        if (planets && ((Date.now() - planets.time) < period_month)) {\n            setPlanets(planets.payload);\n        } else {\n            fillPlanets(`${base_url}/v1/planets`);\n        }\n\n    }, [])\n\n\n    return (\n        <div>\n            <form onSubmit={(e) => {\n                e.preventDefault();\n            }}>\n                <label>First Name\n                    <input type=\"text\" name=\"firstname\" placeholder=\"Your name..\"/>\n                </label>\n                <label>Planet\n                    <select name=\"planet\">{\n                        planets.map((item, index) => <option value={item} key={index}>{item}</option>)\n                    }\n                    </select>\n                </label>\n                <label>Subject\n                    <textarea name=\"subject\" placeholder=\"Write something..\"/>\n                </label>\n                <input type=\"submit\" value=\"Submit\"/>\n            </form>\n        </div>\n    )\n\n}\n\nexport default Contact"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}