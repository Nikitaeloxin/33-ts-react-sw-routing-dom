{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikit\\\\Downloads\\\\33-ts-react-sw-routing-dom\\\\src\\\\components\\\\Contact.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport \"../css/contact.css\";\nimport { base_url, defaultHero, friends, navItems, period_month, StarWarsContext } from \"../utils/constants\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  const [planets, setPlanets] = useState(['wait...']);\n  const {\n    heroId = ''\n  } = useParams();\n  const {\n    setHero: changeHero\n  } = useContext(StarWarsContext);\n  const navigate = useNavigate();\n  async function fillPlanets(url) {\n    const response = await fetch(url);\n    const json = await response.json();\n    const planets = json.map(item => item.name);\n    setPlanets(planets);\n    const info = {\n      payload: planets,\n      time: Date.now()\n    };\n    localStorage.setItem('planets', JSON.stringify(info));\n  }\n  useEffect(() => {\n    const planets = JSON.parse(localStorage.getItem('planets'));\n    if (planets && Date.now() - planets.time < period_month) {\n      setPlanets(planets.payload);\n    } else {\n      fillPlanets(`${base_url}/v1/planets`);\n    }\n    if (!friends.includes(heroId)) {\n      navigate(`/${navItems[3].route}/${defaultHero}`);\n    } else {\n      changeHero(heroId);\n    }\n  }, [heroId]);\n\n  // useEffect(() => {\n  //     if (!friends.includes(heroId)) {\n  //         navigate(`/${navItems[3].route}/${defaultHero}`);\n  //     } else {\n  //         changeHero(heroId);\n  //     }\n  // }, [heroId]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"First Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstname\",\n          placeholder: \"Your name..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Planet\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"planet\",\n          children: planets.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item,\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 54\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Subject\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"subject\",\n          placeholder: \"Write something..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(Contact, \"UB72MKVR9wcf46UE/T82tAWJB4w=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useContext","useEffect","useState","base_url","defaultHero","friends","navItems","period_month","StarWarsContext","useNavigate","useParams","jsxDEV","_jsxDEV","Contact","_s","planets","setPlanets","heroId","setHero","changeHero","navigate","fillPlanets","url","response","fetch","json","map","item","name","info","payload","time","Date","now","localStorage","setItem","JSON","stringify","parse","getItem","includes","route","children","onSubmit","e","preventDefault","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","index","value","_c","$RefreshReg$"],"sources":["C:/Users/nikit/Downloads/33-ts-react-sw-routing-dom/src/components/Contact.tsx"],"sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport \"../css/contact.css\";\nimport {base_url, defaultHero, friends, navItems, period_month, StarWarsContext} from \"../utils/constants\";\nimport {useNavigate, useParams} from \"react-router-dom\";\n\ninterface Planet {\n    name: string\n}\n\nconst Contact = () => {\n\n    const [planets, setPlanets] = useState(['wait...']);\n    const {heroId = ''} = useParams();\n    const {setHero: changeHero} = useContext(StarWarsContext);\n    const navigate = useNavigate();\n\n    async function fillPlanets(url: string) {\n        const response = await fetch(url);\n        const json: Planet[] = await response.json();\n        const planets = json.map(item => item.name);\n        setPlanets(planets)\n        const info = {\n            payload: planets,\n            time: Date.now()\n        }\n        localStorage.setItem('planets', JSON.stringify(info));\n    }\n\n    useEffect(() => {\n        const planets = JSON.parse(localStorage.getItem('planets')!);\n        if (planets && ((Date.now() - planets.time) < period_month)) {\n            setPlanets(planets.payload);\n        } else {\n            fillPlanets(`${base_url}/v1/planets`);\n        }\n        if (!friends.includes(heroId)) {\n            navigate(`/${navItems[3].route}/${defaultHero}`);\n        } else {\n            changeHero(heroId);\n        }\n    }, [heroId])\n\n    // useEffect(() => {\n    //     if (!friends.includes(heroId)) {\n    //         navigate(`/${navItems[3].route}/${defaultHero}`);\n    //     } else {\n    //         changeHero(heroId);\n    //     }\n    // }, [heroId]);\n\n    return (\n        <div>\n            <form onSubmit={(e) => {\n                e.preventDefault();\n            }}>\n                <label>First Name\n                    <input type=\"text\" name=\"firstname\" placeholder=\"Your name..\"/>\n                </label>\n                <label>Planet\n                    <select name=\"planet\">{\n                        planets.map((item, index) => <option value={item} key={index}>{item}</option>)\n                    }\n                    </select>\n                </label>\n                <label>Subject\n                    <textarea name=\"subject\" placeholder=\"Write something..\"/>\n                </label>\n                <input type=\"submit\" value=\"Submit\"/>\n            </form>\n        </div>\n    )\n\n}\n\nexport default Contact"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}